{"version":3,"sources":["flashAirTypes.ts","flashAirClient.js","flashAirClient.ts"],"names":["FlashAir","FlashAir.FileAttribute","FlashAir.FileInfo","FlashAir.FileInfo.Directory","FlashAir.FileInfo.Name","FlashAir.FileInfo.Size","FlashAir.FileInfo.Time","FlashAir.FileInfo.Attributes","FlashAir.FileInfo.IsDirectory","FlashAir.FileInfo.FTIMEtoDateTime","FlashAir.FileInfo.DateTimeToFDATE","FlashAir.FileInfo.DateTimeToFTIME","FlashAir.WebDAVStatus","FlashAir.ExifOientation","FlashAir.WiFiOperationMode","FlashAir.eventEmitter","FlashAir.eventEmitter.on","FlashAir.eventEmitter.once","FlashAir.eventEmitter.once.on","FlashAir.eventEmitter.off","FlashAir.eventEmitter.trigger","__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","FlashAir.FlashAirClient","FlashAir.FlashAirClient.constructor","FlashAir.FlashAirClient.setHostAddress","FlashAir.FlashAirClient.setHostAddress.set","me","onHostFailure","FlashAir.FlashAirClient.initWithHost","photoShareMode","result","trigger","$","show","isAdministrator","onHostReady","FlashAir.FlashAirClient.GetFile","FlashAir.FlashAirClient.GetFileUrl","FlashAir.FlashAirClient.onHostChanged","FlashAir.FlashAirClient.onHostReady","FlashAir.FlashAirClient.onHostFailure","FlashAir.FlashAirClient.startPolling","FlashAir.FlashAirClient.pausePolling","FlashAir.FlashAirClient.resumePolling","FlashAir.FlashAirClient.stopPolling","FlashAir.FlashAirClient.poll","eventName","timestamp","timer","pollingInterval","setTimeout","proxy","poll","FlashAir.FlashAirClient.browserLanguage","lang","substr","toLowerCase","FlashAir.CgiHost","FlashAir.CgiHost.constructor","FlashAir.CgiHost.GetBaseUrl","FlashAir.CgiHost.getTimestamp","FlashAir.CgiHost.GetMethod","FlashAir.CgiHost.ajax","FlashAir.Command","FlashAir.Command.constructor","FlashAir.Command.Get","FlashAir.Command.FileList","dir","lines","split","list","i","length","m","Command","reColumns","exec","push","r_uri","fname","substring","fsize","Number","attr","fdate","ftime","FlashAir.Command.FileCount","FlashAir.Command.IsUpdated","v","FlashAir.Command.NetworkSSID","FlashAir.Command.NetworkPassword","FlashAir.Command.MAC","FlashAir.Command.AcceptLanguage","FlashAir.Command.FirmwareVersion","FlashAir.Command.ControlImagePath","FlashAir.Command.OperationMode","FlashAir.Command.DeviceTimeout","FlashAir.Command.AppCustomInfo","FlashAir.Command.UploadEnabled","FlashAir.Command.CID","FlashAir.Command.LastUpdatedTimestamp","FlashAir.Command.GetAvailableSectorInfo","line","Free","parseInt","Total","SectorSize","FlashAir.Command.TurnOnPhotoShare","FlashAir.Command.TurnOffPhotoShare","FlashAir.Command.IsPhotoShareEnabled","FlashAir.Command.PhotoShareSSID","FlashAir.Command.WebDAVStatus","FlashAir.Command.TimeZone","FlashAir.Thumbnail","FlashAir.Thumbnail.constructor","FlashAir.Thumbnail.GetUrl","FlashAir.Config","FlashAir.Config.constructor","FlashAir.Config.Get","FlashAir.Config.Submit","FlashAir.Config.Clear","FlashAir.Config.setDeviceTimeout","FlashAir.Upload","FlashAir.Upload.constructor"],"mappings":"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","file":"flashAirClient.min.js","sourcesContent":["/**\r\n * Yokin's FlashAir Javascript client library\r\n * (c) 2015 Yokinsoft Jake.Y.Yoshimura http://www.yo-ki.com\r\n *\r\n * @version 0.9.5\r\n * @author Yokinsoft Jake.Y.Yoshimura\r\n * @license MIT License\r\n */\r\n\r\nmodule FlashAir \r\n{\r\n    export enum FileAttribute\r\n    {\r\n        ReadOnly =1,\r\n        Hidden=2,\r\n        System=4,\r\n        Volume = 8,\r\n        Directory = 16,\r\n        Archive = 32\r\n    }\t\r\n\r\n    /**\r\n     * Raw file data from FlashAir host which is given in `wlansd` global array object in *List.htm*.\r\n     * This is also a container of the data returned by `command.cgi?op=100` call, where CSV format is converted in to this interface.\r\n     */\r\n    export interface FileInfoRaw {\r\n         r_uri: string;\r\n         fname: string;\r\n         fsize: number;\r\n         attr: number;\r\n         fdate: number;\r\n         ftime: number;\r\n    }\r\n\r\n    /**\r\n     * Class expression of FileInfoRaw. Extra useful methods are available.\r\n     */\r\n    export class FileInfo implements FileInfoRaw {\r\n        r_uri: string;\r\n        fname: string;\r\n        fsize: number;\r\n        attr: number;\r\n        fdate: number;\r\n        ftime: number;\r\n\r\n        Directory() : string { return this.r_uri; }\r\n        Name() : string { return this.fname; }\r\n        Size() : number { return this.fsize; }\r\n        Time() : Date { return FileInfo.FTIMEtoDateTime( this.fdate, this.ftime ); }\r\n        Attributes() : FileAttribute { return <FileAttribute> this.attr; }\r\n        IsDirectory() : boolean { return !!(this.attr & FileAttribute.Directory); }\r\n        \r\n        /**\r\n         * convert FDATE, FTIME internal datetime value to javascript Date object.\r\n         * \r\n         * FlashAir 内部形式の FDATE FTIME を Date オブジェクトに変換します。\r\n         */\r\n        static FTIMEtoDateTime( _date : number, _time : number) : Date\r\n        {\r\n            return new Date(1980 + ((_date >> 9) & 0x7F), ((_date >> 5) & 0xF) - 1, _date & 0x1F, (_time >> 11) & 0x1F, (_time >> 5) & 0x3F, ( _time << 1) & 0x3F );\r\n        }\r\n        /**\r\n         * convert javascript Date object to internal FDATE format.\r\n         * \r\n         * Javascript の Date を FDATE 数値形式に変換します。\r\n         */\r\n        static DateTimeToFDATE( date : Date ) : number\r\n        {\r\n            return (((date.getUTCFullYear() - 1980) << 9) + ((date.getMonth() - 1) << 5) + date.getDay() );\r\n        }\r\n        /**\r\n         * convert javascript Date object to internal FTIME format.\r\n         * \r\n         * Javascript の Date を FTIME 数値形式に変換します。\r\n         */\r\n        static DateTimeToFTIME( date : Date ) : number\r\n        {\r\n            return (date.getHours() << 11) + (date.getMinutes() << 5) + (date.getSeconds() >> 1 );\r\n        }\r\n    }\r\n    export interface FreeSectorInfo \r\n    {\r\n        Free : number;\r\n        Total : number;\r\n        SectorSize : number;\r\n    }\r\n\r\n    export enum WebDAVStatus\r\n    {\r\n        Disabled = 0,\r\n        ReadOnly = 1,\r\n        ReadWrite = 2\r\n    }\r\n\r\n    export interface ExifInfo\r\n    {\r\n        Width : number;\r\n        Height : number;\r\n        Orientation : ExifOientation\r\n    }\r\n\r\n    export enum ExifOientation\r\n    {\r\n        Horizontal = 1, //=> 'Horizontal (normal)',\r\n        MirrorHorizontal = 2, // => 'Mirror horizontal',\r\n        Rotate180 = 3, // => 'Rotate 180',\r\n        MirrorVertical = 4,// => 'Mirror vertical',\r\n        MirrorHhorizontalAndRotate270CW = 5,// => 'Mirror horizontal and rotate 270 CW',\r\n        Rotate90CW = 6, // => '',\r\n        MirrorHorizontalAndRotate90CW = 7, // => 'Mirror horizontal and rotate 90 CW',\r\n        Rotate270CW = 8 // => 'Rotate 270 CW',\r\n    }\r\n\r\n    export enum WiFiOperationMode\r\n    {\r\n        /**\r\n         *  「無線起動画面」のライトプロテクト解除操作で無線LAN機能を起動します。無線LANモードはAPモードです。\r\n         */\r\n        AccessPointDeferred = 0,\r\n        /**\r\n         *  「無線起動画面」のライトプロテクト解除操作で無線LAN機能を起動します。無線LANモードはSTAモードです。\r\n         */\r\n        StationDeferred = 2,\r\n        /**\r\n         *  「無線起動画面」のライトプロテクト解除操作で無線LAN機能を起動します。無線LANモードはインターネット同時接続モードです。 (ファームウェア 2.00.02以上)\r\n         */\r\n        BridgeDeferred = 3,\r\n        /**\r\n         * \tカード電源投入時に無線LAN機能を起動します。無線LANモードはAPモードです。\r\n         */\r\n        AccessPoint = 4,\r\n        /**\r\n         *  カード電源投入時に無線LAN機能を起動します。無線LANモードはSTAモードです。\r\n         */\r\n        Station = 5,\r\n        /**\r\n         *  カード電源投入時に無線LAN機能を起動します。無線LANモードはインターネット同時接続モードです。 (ファームウェア 2.00.02以上)\r\n         */\r\n        Bridge = 6\r\n    }\r\n    /**\r\n     * internal use only.\r\n     * to make class object event emittable.\r\n     */\r\n    export class eventEmitter\r\n    {\r\n        private _callbacks;\r\n        on( event, fn )\r\n        {\r\n            this._callbacks = this._callbacks || {};\r\n            (this._callbacks[event] = this._callbacks[event] || []).push(fn);\r\n            return this;\r\n        }\r\n        addEventListener(event,fn){}\r\n        once(event, fn)\r\n        {\r\n            function on(){\r\n                this.off(event, on);\r\n                fn.apply(this,arguments);\r\n            }\r\n            this.on(event, on);\r\n            return this;\r\n        }\r\n        off( event, fn )\r\n        {\r\n            this._callbacks = this._callbacks || {};\r\n            // all\r\n            if (0 == arguments.length) {\r\n                this._callbacks = {};\r\n                return this;\r\n            }\r\n            // specific event\r\n            var callbacks = this._callbacks[event];\r\n            if (!callbacks) return this;\r\n            \r\n            // remove all handlers\r\n            if (1 == arguments.length) {\r\n                delete this._callbacks[event];\r\n                return this;\r\n            }\r\n\r\n            // remove specific handler\r\n            var cb;\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                cb = callbacks[i];\r\n                if (cb === fn || cb.fn === fn) {\r\n                    callbacks.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n            return this;\r\n        }\r\n        removeListener(event,fn){}\r\n        removeAllListeners(event,fn){}\r\n        removeEventListener(event,fn){}\r\n        \r\n        trigger(event,...args)\r\n        {\r\n            this._callbacks = this._callbacks || {};\r\n            var callbacks = this._callbacks[event];\r\n            if (callbacks) {\r\n                callbacks = callbacks.slice(0);\r\n                for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n                    callbacks[i].apply(this, args);\r\n                }\r\n            }\r\n            return this;   \r\n        }\r\n    }\r\n    eventEmitter.prototype.addEventListener = eventEmitter.prototype.on;\r\n    eventEmitter.prototype.removeListener = eventEmitter.prototype.removeAllListeners = eventEmitter.prototype.removeEventListener = eventEmitter.prototype.off; \r\n/*    export class TimeSpan {\r\n        \r\n    }*/\r\n}\r\n","/**\n * Yokin's FlashAir Javascript client library\n * (c) 2015 Yokinsoft Jake.Y.Yoshimura http://www.yo-ki.com\n *\n * @version 0.9.5\n * @author Yokinsoft Jake.Y.Yoshimura\n * @license MIT License\n */\nvar FlashAir;\n(function (FlashAir) {\n    (function (FileAttribute) {\n        FileAttribute[FileAttribute[\"ReadOnly\"] = 1] = \"ReadOnly\";\n        FileAttribute[FileAttribute[\"Hidden\"] = 2] = \"Hidden\";\n        FileAttribute[FileAttribute[\"System\"] = 4] = \"System\";\n        FileAttribute[FileAttribute[\"Volume\"] = 8] = \"Volume\";\n        FileAttribute[FileAttribute[\"Directory\"] = 16] = \"Directory\";\n        FileAttribute[FileAttribute[\"Archive\"] = 32] = \"Archive\";\n    })(FlashAir.FileAttribute || (FlashAir.FileAttribute = {}));\n    var FileAttribute = FlashAir.FileAttribute;\n    /**\n     * Class expression of FileInfoRaw. Extra useful methods are available.\n     */\n    var FileInfo = (function () {\n        function FileInfo() {\n        }\n        FileInfo.prototype.Directory = function () {\n            return this.r_uri;\n        };\n        FileInfo.prototype.Name = function () {\n            return this.fname;\n        };\n        FileInfo.prototype.Size = function () {\n            return this.fsize;\n        };\n        FileInfo.prototype.Time = function () {\n            return FileInfo.FTIMEtoDateTime(this.fdate, this.ftime);\n        };\n        FileInfo.prototype.Attributes = function () {\n            return this.attr;\n        };\n        FileInfo.prototype.IsDirectory = function () {\n            return !!(this.attr & 16 /* Directory */);\n        };\n        /**\n         * convert FDATE, FTIME internal datetime value to javascript Date object.\n         *\n         * FlashAir 内部形式の FDATE FTIME を Date オブジェクトに変換します。\n         */\n        FileInfo.FTIMEtoDateTime = function (_date, _time) {\n            return new Date(1980 + ((_date >> 9) & 0x7F), ((_date >> 5) & 0xF) - 1, _date & 0x1F, (_time >> 11) & 0x1F, (_time >> 5) & 0x3F, (_time << 1) & 0x3F);\n        };\n        /**\n         * convert javascript Date object to internal FDATE format.\n         *\n         * Javascript の Date を FDATE 数値形式に変換します。\n         */\n        FileInfo.DateTimeToFDATE = function (date) {\n            return (((date.getUTCFullYear() - 1980) << 9) + ((date.getMonth() - 1) << 5) + date.getDay());\n        };\n        /**\n         * convert javascript Date object to internal FTIME format.\n         *\n         * Javascript の Date を FTIME 数値形式に変換します。\n         */\n        FileInfo.DateTimeToFTIME = function (date) {\n            return (date.getHours() << 11) + (date.getMinutes() << 5) + (date.getSeconds() >> 1);\n        };\n        return FileInfo;\n    })();\n    FlashAir.FileInfo = FileInfo;\n    (function (WebDAVStatus) {\n        WebDAVStatus[WebDAVStatus[\"Disabled\"] = 0] = \"Disabled\";\n        WebDAVStatus[WebDAVStatus[\"ReadOnly\"] = 1] = \"ReadOnly\";\n        WebDAVStatus[WebDAVStatus[\"ReadWrite\"] = 2] = \"ReadWrite\";\n    })(FlashAir.WebDAVStatus || (FlashAir.WebDAVStatus = {}));\n    var WebDAVStatus = FlashAir.WebDAVStatus;\n    (function (ExifOientation) {\n        ExifOientation[ExifOientation[\"Horizontal\"] = 1] = \"Horizontal\";\n        ExifOientation[ExifOientation[\"MirrorHorizontal\"] = 2] = \"MirrorHorizontal\";\n        ExifOientation[ExifOientation[\"Rotate180\"] = 3] = \"Rotate180\";\n        ExifOientation[ExifOientation[\"MirrorVertical\"] = 4] = \"MirrorVertical\";\n        ExifOientation[ExifOientation[\"MirrorHhorizontalAndRotate270CW\"] = 5] = \"MirrorHhorizontalAndRotate270CW\";\n        ExifOientation[ExifOientation[\"Rotate90CW\"] = 6] = \"Rotate90CW\";\n        ExifOientation[ExifOientation[\"MirrorHorizontalAndRotate90CW\"] = 7] = \"MirrorHorizontalAndRotate90CW\";\n        ExifOientation[ExifOientation[\"Rotate270CW\"] = 8] = \"Rotate270CW\"; // => 'Rotate 270 CW',\n    })(FlashAir.ExifOientation || (FlashAir.ExifOientation = {}));\n    var ExifOientation = FlashAir.ExifOientation;\n    (function (WiFiOperationMode) {\n        /**\n         *  「無線起動画面」のライトプロテクト解除操作で無線LAN機能を起動します。無線LANモードはAPモードです。\n         */\n        WiFiOperationMode[WiFiOperationMode[\"AccessPointDeferred\"] = 0] = \"AccessPointDeferred\";\n        /**\n         *  「無線起動画面」のライトプロテクト解除操作で無線LAN機能を起動します。無線LANモードはSTAモードです。\n         */\n        WiFiOperationMode[WiFiOperationMode[\"StationDeferred\"] = 2] = \"StationDeferred\";\n        /**\n         *  「無線起動画面」のライトプロテクト解除操作で無線LAN機能を起動します。無線LANモードはインターネット同時接続モードです。 (ファームウェア 2.00.02以上)\n         */\n        WiFiOperationMode[WiFiOperationMode[\"BridgeDeferred\"] = 3] = \"BridgeDeferred\";\n        /**\n         * \tカード電源投入時に無線LAN機能を起動します。無線LANモードはAPモードです。\n         */\n        WiFiOperationMode[WiFiOperationMode[\"AccessPoint\"] = 4] = \"AccessPoint\";\n        /**\n         *  カード電源投入時に無線LAN機能を起動します。無線LANモードはSTAモードです。\n         */\n        WiFiOperationMode[WiFiOperationMode[\"Station\"] = 5] = \"Station\";\n        /**\n         *  カード電源投入時に無線LAN機能を起動します。無線LANモードはインターネット同時接続モードです。 (ファームウェア 2.00.02以上)\n         */\n        WiFiOperationMode[WiFiOperationMode[\"Bridge\"] = 6] = \"Bridge\";\n    })(FlashAir.WiFiOperationMode || (FlashAir.WiFiOperationMode = {}));\n    var WiFiOperationMode = FlashAir.WiFiOperationMode;\n    /**\n     * internal use only.\n     * to make class object event emittable.\n     */\n    var eventEmitter = (function () {\n        function eventEmitter() {\n        }\n        eventEmitter.prototype.on = function (event, fn) {\n            this._callbacks = this._callbacks || {};\n            (this._callbacks[event] = this._callbacks[event] || []).push(fn);\n            return this;\n        };\n        eventEmitter.prototype.addEventListener = function (event, fn) {\n        };\n        eventEmitter.prototype.once = function (event, fn) {\n            function on() {\n                this.off(event, on);\n                fn.apply(this, arguments);\n            }\n            this.on(event, on);\n            return this;\n        };\n        eventEmitter.prototype.off = function (event, fn) {\n            this._callbacks = this._callbacks || {};\n            // all\n            if (0 == arguments.length) {\n                this._callbacks = {};\n                return this;\n            }\n            // specific event\n            var callbacks = this._callbacks[event];\n            if (!callbacks)\n                return this;\n            // remove all handlers\n            if (1 == arguments.length) {\n                delete this._callbacks[event];\n                return this;\n            }\n            // remove specific handler\n            var cb;\n            for (var i = 0; i < callbacks.length; i++) {\n                cb = callbacks[i];\n                if (cb === fn || cb.fn === fn) {\n                    callbacks.splice(i, 1);\n                    break;\n                }\n            }\n            return this;\n        };\n        eventEmitter.prototype.removeListener = function (event, fn) {\n        };\n        eventEmitter.prototype.removeAllListeners = function (event, fn) {\n        };\n        eventEmitter.prototype.removeEventListener = function (event, fn) {\n        };\n        eventEmitter.prototype.trigger = function (event) {\n            var args = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                args[_i - 1] = arguments[_i];\n            }\n            this._callbacks = this._callbacks || {};\n            var callbacks = this._callbacks[event];\n            if (callbacks) {\n                callbacks = callbacks.slice(0);\n                for (var i = 0, len = callbacks.length; i < len; ++i) {\n                    callbacks[i].apply(this, args);\n                }\n            }\n            return this;\n        };\n        return eventEmitter;\n    })();\n    FlashAir.eventEmitter = eventEmitter;\n    eventEmitter.prototype.addEventListener = eventEmitter.prototype.on;\n    eventEmitter.prototype.removeListener = eventEmitter.prototype.removeAllListeners = eventEmitter.prototype.removeEventListener = eventEmitter.prototype.off;\n})(FlashAir || (FlashAir = {}));\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\n/**\n * Yokin's FlashAir Javascript client library\n * (c) 2015 Yokinsoft Jake.Y.Yoshimura http://www.yo-ki.com\n *\n * @version 0.9.5\n * @author Yokinsoft Jake.Y.Yoshimura http://www.yo-ki.com\n * @license MIT License\n */\n/// <reference path=\"../typings/jquery/jquery.d.ts\" />\n/// <reference path=\"./flashAirTypes.ts\" />\n/**\n * FlashAir module contains all classes which are needed for FlashAir client access.\n * Only entry point of FlashAir API access is {@link FlashAirClient FlashAir.FlashAirClient} class.\n * @see {@link FlashAirClient}\n * @preferred\n */\nvar FlashAir;\n(function (FlashAir) {\n    /**\n     * HTTP client for FlashAir.\n     * **Command**, **Config**, **Thumbnail** properties are corresponding to each CGI API on FlashAir.\n     * On the creation of this object, some APIs are automatically called to obtain the host version and status.\n     * It starts polling automatically soon after the initialization.\n     * Polling interval can be specified in constructor's option parameter.\n     * Host ( FlashAir network address ) can be provided in the constructor or you can change the host address any time later by calling [`setHostAddress`]{@link setHostAddress}.\n     *\n     * ## How to start\n     * Instantiating FlashAirClient object is the simplest start.\n     * ```\n     * var fa = new FlashAir.FlashAirClient();\n     * ```\n     * Available options are defined in {@link FlashAirClientConfig FlashAirClientConfig}.\n     *\n     * ##Events\n     * This class supports DOM like event system. Changes of host SD card status and some more can be monitored by handling those events.\n     * Event attach/detach methos are just same as jQuery's on/off/once\n     * ```\n     * var fa = new FlashAir.FlashAirClient();\n     * fa.on('fa.hostready', function(){\n     *     // custom initialization\n     * });\n     * ```\n     *\n     *\n     * ###```fa.updated```\n     * is triggered when /command.cgi?op=121 host timestamp returns updated number. You can take any action like getting a updated file list.\n     *\n     * ###```fa.hostchanged```\n     * is triggered when the host name or IP address is changing to another. During the initial connection, this event doesn't fire.\n     *\n     * ###```fa.hostready```\n     * After the initial connection or fireing ```fa.hostchanged```, this class tries to obtain some host status by some API calls.\n     * This event is triggered when those initial calls are all done.\n     *\n     * ###```fa.hostfailure```\n     * After calling [setHostAddress]{@link setHostAddress}, if connection failed, this event is triggered.\n     *\n     * ###```fa.polling```\n     * reports polling status every *n* milliseconds interval which is configured with options for constructor.\n     * The polling status has a status value:\n     * ```\n     * fa.on('fa.polling', function( status ){\n     *     // check the status\n     * });\n     * ```\n     *\n     * status value can be:\n     * - **connecting** Trying to connect to the host SD card.\n     * - **connected** Connection to the host SD card has been confirmed.\n     * - **disconnected**  Connection to the host SD card has been lost.\n     *\n     * ###```fa.photosharemode```\n     * is triggered when the host SD card is currently in PHOTOSHARE mode.\n     *\n     *\n     */\n    var FlashAirClient = (function (_super) {\n        __extends(FlashAirClient, _super);\n        /**\n         * @param urlBase an address to FlashAir host, \"http://flashair/\". If omitted, proper host address is infered.\n         * @param options specify options. Available options are defined in {@link FlashAirClientConfig FlashAirClientConfig}\n         */\n        function FlashAirClient(urlBase, options) {\n            _super.call(this);\n            /**\n             * version compatibility by number 1, 2, 3...\n             */\n            this.firmwareVersionNumber = 1;\n            /// milisecond\n            this.pollingInterval = 2000;\n            this._pausePolling = false;\n            var me = this;\n            me.Command = new Command(this);\n            me.Thumbnail = new Thumbnail(this);\n            me.Config = new Config(this);\n            me.Upload = new Upload(this);\n            me.mastercode = sessionStorage.getItem(\"administrator\");\n            // options\n            me.pollingInterval = !options.polling ? me.pollingInterval : options.polling === true ? me.pollingInterval : options.polling === false ? 0 : options.polling;\n            this.setHostAddress(urlBase || \"\", options.checkHost || true);\n        }\n        /**\n         * @param newUrl new host URL of FlashAir, which may be like \"http://flashair/\" or \"http://192.168.0.100/\"\n         * @param verify If true, this method tries to verify the existence of the host address by calling command.cgi\n         * @returns jQuery promise object.\n         */\n        FlashAirClient.prototype.setHostAddress = function (newUrl, verify) {\n            if (verify === void 0) { verify = true; }\n            var me = this;\n            me.stopPolling();\n            if (verify) {\n                return $.ajax({\n                    url: newUrl + \"/command.cgi?op=108&TIME=\" + Date.now(),\n                    timeout: 3000\n                }).done(set).fail(function () {\n                    me.onHostFailure();\n                }).always(function () {\n                });\n            }\n            else {\n                set();\n                var d = $.Deferred();\n                d.resolve();\n                return d;\n            }\n            function set(firmware) {\n                if (!/\\/$/.test(newUrl))\n                    newUrl = newUrl + \"/\";\n                me.baseUrl = newUrl;\n                me.firmware = firmware;\n                if (firmware) {\n                    var m = /(\\d+)\\.(\\d+)\\.(\\d+)$/.exec(firmware);\n                    if (m)\n                        me.firmwareVersionNumber = Number(m[1]);\n                }\n                me.onHostChanged();\n                me.initWithHost();\n            }\n        };\n        FlashAirClient.prototype.initWithHost = function () {\n            var me = this;\n            var inits = [];\n            inits.push(this.browserLanguage());\n            if (me.firmwareVersionNumber >= 2) {\n                inits.push(this.Command.IsPhotoShareEnabled().done(function (result) {\n                    me.photoShareMode = result;\n                    me.trigger(\"fa.photosharemode\");\n                }));\n            }\n            else\n                me.photoShareMode = false; // ver 1 model does not support this\n            if (me.mastercode) {\n                inits.push($.ajax({ type: 'GET', cache: false, url: '/config.cgi?MASTERCODE=' + me.mastercode }).done(function (result) {\n                    if (result == \"SUCCESS\") {\n                        // I am administrator\n                        $(\"#setBtn\").show();\n                        me.isAdministrator = true;\n                    }\n                }));\n            }\n            $.when.apply($, inits).then(function () {\n                me.onHostReady();\n            }, function () {\n                me.onHostFailure();\n            });\n        };\n        /**\n         * Not implemented.\n         * @param path\n         * @returns\n         */\n        FlashAirClient.prototype.GetFile = function (path) {\n            throw \"not implemented\";\n        };\n        FlashAirClient.prototype.GetFileUrl = function (path) {\n            var p;\n            if (typeof path == \"string\")\n                p = path;\n            else\n                p = (path.r_uri || path.Directory) + \"\\\\\" + (path.fname || path.Name);\n            return this.baseUrl + p.replace(\"\\\\\", \"/\");\n        };\n        FlashAirClient.prototype.onHostChanged = function () {\n            this.trigger(\"fa.hostchanged\");\n        };\n        FlashAirClient.prototype.onHostReady = function () {\n            this.trigger(\"fa.hostready\");\n            this.startPolling();\n        };\n        FlashAirClient.prototype.onHostFailure = function () {\n            this.trigger(\"fa.hostfailure\");\n        };\n        FlashAirClient.prototype.startPolling = function () {\n            if (!this.photoShareMode && this.pollingInterval > 0 && !this.timer)\n                this.poll();\n        };\n        FlashAirClient.prototype.pausePolling = function () {\n            this._pausePolling = true;\n        };\n        FlashAirClient.prototype.resumePolling = function () {\n            this._pausePolling = false;\n        };\n        FlashAirClient.prototype.stopPolling = function () {\n            if (this.timer) {\n                clearTimeout(this.timer);\n                this.timer = null;\n            }\n        };\n        FlashAirClient.prototype.poll = function () {\n            var me = this;\n            if (me._pausePolling) {\n                me.timer = setTimeout($.proxy(me.poll, me), me.pollingInterval);\n                return;\n            }\n            var eventName = \"fa.polling\";\n            me.trigger(eventName, \"connecting\");\n            this.Command.LastUpdatedTimestamp(this.pollingInterval / 3).done(function (timestamp) {\n                me.trigger(eventName, \"connected\");\n                if (me.timestamp && timestamp > me.timestamp) {\n                    me.trigger(\"fa.updated\");\n                }\n                me.timestamp = timestamp;\n            }).fail(function () {\n                me.trigger(eventName, \"disconnected\");\n            }).always(function () {\n                if (me.pollingInterval > 0) {\n                    me.timer = setTimeout($.proxy(me.poll, me), me.pollingInterval);\n                }\n                else\n                    me.timer = null;\n            });\n        };\n        //\n        FlashAirClient.prototype.browserLanguage = function () {\n            var me = this;\n            try {\n                var lang;\n                lang = (navigator.browserLanguage || navigator.language || navigator.userLanguage).substr(0, 2);\n                if (lang == 'en') {\n                    return me.Command.AcceptLanguage().done(function (result) {\n                        var lang;\n                        if (result.substr(17, 2) == 'zh') {\n                            lang = result.substr(17, 5);\n                            lang = lang.toLowerCase();\n                            if ((lang == 'zh-cn') || (lang == 'zh-tw')) {\n                                return lang;\n                            }\n                            else {\n                                lang = result.substr(17, 10);\n                                lang = lang.toLowerCase();\n                                if (lang == 'zh-hans-cn') {\n                                    lang = 'zh-cn';\n                                }\n                                else if (lang == 'zh-hant-tw') {\n                                    lang = 'zh-tw';\n                                }\n                                else {\n                                    lang = 'zh';\n                                }\n                                return lang;\n                            }\n                        }\n                        else {\n                            lang = result.substr(17, 2);\n                        }\n                        me.lang = lang;\n                    });\n                }\n                else if (lang == 'zh') {\n                    me.lang = (navigator.browserLanguage || navigator.language || navigator.userLanguage);\n                }\n                else\n                    me.lang = lang;\n            }\n            catch (e) {\n                me.lang = 'en';\n            }\n            var d = $.Deferred();\n            d.resolve();\n            return d;\n        };\n        return FlashAirClient;\n    })(FlashAir.eventEmitter);\n    FlashAir.FlashAirClient = FlashAirClient;\n    /**\n     * base class of CGI.\n     * This class contains utility methods for CGI call, HTTP GET/POST etc.\n     */\n    var CgiHost = (function () {\n        /**\n         * internal use only\n         */\n        function CgiHost(fa) {\n            this.Client = fa;\n        }\n        CgiHost.prototype.GetBaseUrl = function () {\n            return this.Client.baseUrl;\n        };\n        CgiHost.prototype.getTimestamp = function () {\n            return Date.now();\n        };\n        /**\n         * helper function to call host CGI with GET method\n         * @param qs query string with name:value\n         * @param ajaxOption\n         */\n        CgiHost.prototype.GetMethod = function (qs, ajaxOption) {\n            if (qs)\n                qs[\"TIME\"] = this.getTimestamp();\n            var a = {\n                type: \"GET\",\n                url: this.GetBaseUrl() + this.CgiPath,\n                data: qs\n            };\n            if (ajaxOption)\n                $.extend(a, ajaxOption);\n            return $.ajax(a);\n        };\n        CgiHost.prototype.ajax = function (o) {\n            return $.ajax(o);\n        };\n        return CgiHost;\n    })();\n    FlashAir.CgiHost = CgiHost;\n    /**\n     * represents /command.cgi API.\n     * Every API method is asynchronous with JQueryPromise object. You can get the result in number, string and predefined enum or object\n     * by calling .done/fail/always... promise methods.\n     *\n     * ###example of listing files\n     *\n     * ```\n     * var fa = new FlashAir.FlashAirClient();\n     * fa.Command.FileList( \"/DCIM\" )\n     *   .done(function (list) {\n     *       // list is an array of FlashAir.FileInfoRaw\n     *\n     *   });\n     * ```\n     */\n    var Command = (function (_super) {\n        __extends(Command, _super);\n        /**\n         * internal use only\n         */\n        function Command(fa) {\n            _super.call(this, fa);\n            this.CgiPath = \"command.cgi\";\n        }\n        /**\n         * utility method of HTTP GET with explicit `op` number.\n         * returned content is parsed as TResult type.\n         * @param op `op` number for command.cgi call.\n         * @param qs other query strings. op and qs are mixed when it calls command.cgi\n         * @returns jQuery promise object.\n         */\n        Command.prototype.Get = function (op, qs, ajaxOptions) {\n            var data = $.extend({}, qs || {}, { op: op });\n            return this.GetMethod(data, ajaxOptions).pipe(function (result) {\n                return result;\n            });\n        };\n        /**\n         * List files in a directory.\n         * ```OP=100&DIR=/DCIM```\n         * command.cgi?OP=100 operation.\n         * @param dir directory path to list\n         * @returns jQuery promise for `FileInfoRaw`\n         */\n        Command.prototype.FileList = function (dir) {\n            return this.Get(100, { \"DIR\": dir }).pipe(function (result) {\n                // parse HTML content for the \"LIST\"\n                dir = dir == \"/\" ? \"\" : dir;\n                var lines = result.split(/\\r?\\n/);\n                if (lines[0] != \"WLANSD_FILELIST\")\n                    throw \"First line is not WLANSD_FILELIST.\";\n                var list = [];\n                for (var i = 1; i < lines.length; i++) {\n                    var m = Command.reColumns.exec(lines[i]);\n                    if (m) {\n                        list.push({ r_uri: dir, fname: m[1].substring(dir.length + 1), fsize: Number(m[2]), attr: Number(m[3]), fdate: Number(m[4]), ftime: Number(m[5]) });\n                    }\n                }\n                return list;\n            });\n        };\n        /**\n         * ```op=101&DIR=/DCIM```\n         */\n        Command.prototype.FileCount = function (dir) {\n            return this.Get(101, { \"DIR\": dir });\n        };\n        /**\n         * ```op=102```\n         */\n        Command.prototype.IsUpdated = function () {\n            return this.Get(102).pipe(function (v) {\n                return v == 1;\n            });\n        };\n        /**\n         * ```op=104```\n         */\n        Command.prototype.NetworkSSID = function () {\n            return this.Get(104);\n        };\n        /**\n         * ```op=105```\n         */\n        Command.prototype.NetworkPassword = function () {\n            return this.Get(105);\n        };\n        /**\n         * ```op=106```\n         * MACアドレスの取得\n         */\n        Command.prototype.MAC = function () {\n            return this.Get(106);\n        };\n        /**\n         * ```op=107```\n         * ブラウザ言語の取得\n         */\n        Command.prototype.AcceptLanguage = function () {\n            return this.Get(107);\n        };\n        /**\n         * ```op=108```\n         * ファームウェアバージョン情報の取得\n         */\n        Command.prototype.FirmwareVersion = function () {\n            return this.Get(108);\n        };\n        /**\n         * ```op=109```\n         * 制御イメージの取得\n         */\n        Command.prototype.ControlImagePath = function () {\n            return this.Get(109);\n        };\n        /**\n         * ```op=110```\n         * 無線LANモードの取得\n         */\n        Command.prototype.OperationMode = function () {\n            return this.Get(110);\n        };\n        /**\n         * ```op=111```\n         * 無線LANタイムアウト時間の設定\n         */\n        Command.prototype.DeviceTimeout = function () {\n            return this.Get(111);\n        };\n        /**\n         * ```op=117```\n         * アプリケーション独自情報の取得\n         */\n        Command.prototype.AppCustomInfo = function () {\n            return this.Get(117);\n        };\n        /**\n         * ```op=118```\n         * アップロード機能の有効状態の取得\n         */\n        Command.prototype.UploadEnabled = function () {\n            return this.Get(118).pipe(function (v) {\n                v == \"1\";\n            });\n        };\n        /**\n         * ```op=120```\n         * CIDの取得\n         */\n        Command.prototype.CID = function () {\n            return this.Get(120);\n        };\n        /**\n         * ```op=121```\n         * アップデート情報の取得 (タイムスタンプ形式)\n         * @param timeout timeout of CGI call in millisecond. In purpose of avoiding long lasting connection to CGI server to reduce unnecessary load.\n         */\n        Command.prototype.LastUpdatedTimestamp = function (timeout) {\n            return this.Get(121, null, { timeout: timeout });\n        };\n        /*\n        byte[] ReadExtensionRegisterSingleBlockCommand(int addr, int len)\n        {\n            throw new NotImplementedException();\n        }\n        bool WriteExtensionRegisterSingleBlockCommand(int addr, int len, byte[] data)\n        {\n            throw new NotImplementedException();\n        }\n        */\n        Command.prototype.GetAvailableSectorInfo = function () {\n            return this.Get(140).pipe(function (result) {\n                var line = result.split(/[\\/\\,]/);\n                return { Free: parseInt(line[0]), Total: parseInt(line[1]), SectorSize: parseInt(line[2]) };\n            });\n        };\n        Command.prototype.TurnOnPhotoShare = function (dir, date) {\n            var qs = {\n                \"DIR\": dir,\n                \"DATE\": FlashAir.FileInfo.DateTimeToFDATE(date)\n            };\n            return this.Get(200, qs).pipe(function (result) {\n                return result == \"OK\";\n            });\n        };\n        Command.prototype.TurnOffPhotoShare = function () {\n            return this.Get(201).pipe(function (result) {\n                return result == \"OK\";\n            });\n        };\n        Command.prototype.IsPhotoShareEnabled = function () {\n            return this.Get(202).pipe(function (result) {\n                return result == \"SHAREMODE\";\n            });\n        };\n        Command.prototype.PhotoShareSSID = function () {\n            return this.Get(203);\n        };\n        Command.prototype.WebDAVStatus = function () {\n            return this.Get(220).pipe(function (result) {\n                return result;\n            });\n        };\n        /// minutes\n        Command.prototype.TimeZone = function () {\n            return this.Get(221).pipe(function (result) {\n                return result * 15;\n            });\n        };\n        /**\n         * regular expression pattern to parse WLANSD_FILELIST which is returned from OP=100 CGI call.\n         */\n        Command.reColumns = /^(.+),(\\d+),(\\d+),(\\d+),(\\d+)/;\n        return Command;\n    })(CgiHost);\n    FlashAir.Command = Command;\n    var Thumbnail = (function (_super) {\n        __extends(Thumbnail, _super);\n        function Thumbnail(fa) {\n            _super.call(this, fa);\n            this.CgiPath = \"thumbnail.cgi\";\n        }\n        /**\n         * get a URL address for the thumbnail image.\n         * @param file FlashAir.FileInfoRaw object which is returned from op=100 call.\n         */\n        Thumbnail.prototype.GetUrl = function (file) {\n            if (typeof file == \"string \")\n                return this.GetBaseUrl() + this.CgiPath + \"?\" + file;\n            return this.GetBaseUrl() + this.CgiPath + \"?\" + file.r_uri + \"/\" + file.fname;\n        };\n        return Thumbnail;\n    })(CgiHost);\n    FlashAir.Thumbnail = Thumbnail;\n    var Config = (function (_super) {\n        __extends(Config, _super);\n        function Config(fa) {\n            _super.call(this, fa);\n            this.CgiPath = \"config.cgi\";\n            this.CONFIG = {};\n        }\n        Config.prototype.Get = function (qs) {\n            return this.GetMethod(qs);\n        };\n        /// <summary>\n        /// Configオブジェクトに対して設定した情報を FlashAir にまとめて送信します。\n        /// </summary>\n        /// <param name=\"masterCode\"></param>\n        /// <returns></returns>\n        Config.prototype.Submit = function (masterCode) {\n            this.CONFIG[\"MASTERCODE\"] = masterCode;\n            return this.Get(this.CONFIG).pipe(function (result) {\n                return result == \"SUCCESS\";\n            });\n        };\n        /// <summary>\n        /// ローカルで設定したCONFIG情報をすべてクリアします。\n        /// </summary>\n        Config.prototype.Clear = function () {\n            this.CONFIG = {};\n        };\n        /// <summary>\n        /// 無線LAN機能の自動タイムアウト時間を設定します。単位はミリ秒です。 設定可能な値は、60000から4294967294で、デフォルト値は300000(5分)です。\n        /// 0を指定すると自動停止しない設定になります。ただし、ホスト機器のスリープでカードへの電源供給が遮断された場合などに、停止することがあります。\n        /// </summary>\n        /*\n        getDeviceTimeout() : TimeSpan {\n            return new TimeSpan( GetCONFIG<number>(\"APPAUTOTIME\") );\n        }*/\n        Config.prototype.setDeviceTimeout = function (value) {\n            var ms = value;\n            if (ms < 60000 || ms > 4294967294)\n                throw \"value must be between 60000 and 4294967294.\";\n            this.CONFIG.APPAUTOTIME = ms;\n        };\n        return Config;\n    })(CgiHost);\n    FlashAir.Config = Config;\n    var Upload = (function (_super) {\n        __extends(Upload, _super);\n        function Upload(fa) {\n            _super.call(this, fa);\n        }\n        return Upload;\n    })(CgiHost);\n    FlashAir.Upload = Upload;\n})(FlashAir || (FlashAir = {}));\n","/**\r\n * Yokin's FlashAir Javascript client library\r\n * (c) 2015 Yokinsoft Jake.Y.Yoshimura http://www.yo-ki.com\r\n *\r\n * @version 0.9.5\r\n * @author Yokinsoft Jake.Y.Yoshimura http://www.yo-ki.com\r\n * @license MIT License\r\n */\r\n/// <reference path=\"../typings/jquery/jquery.d.ts\" />\r\n/// <reference path=\"./flashAirTypes.ts\" />\r\n/**\r\n * FlashAir module contains all classes which are needed for FlashAir client access.\r\n * Only entry point of FlashAir API access is {@link FlashAirClient FlashAir.FlashAirClient} class.\r\n * @see {@link FlashAirClient}\r\n * @preferred\r\n */\r\nmodule FlashAir {\r\n    /**\r\n     * Options for FlashAirClient constructor.\r\n     * \r\n     */\r\n    export interface FlashAirClientConfig {\r\n        /**\r\n         * `true` : enable polling with the default interval setting (2 seconds). \r\n         * \r\n         * `false` : disables polling.\r\n         * \r\n         * `number` larger than 0 : sets polling interval in miliseconds.\r\n         */\r\n        polling? : boolean | number;\r\n        /**\r\n         * true: to check host presence by accessing command.cgi?op=108 (firmware version) [default]\r\n         * false: to skip host check.\r\n         */\r\n        checkHost? : boolean;\r\n    }\r\n    /**\r\n     * HTTP client for FlashAir.\r\n     * **Command**, **Config**, **Thumbnail** properties are corresponding to each CGI API on FlashAir.\r\n     * On the creation of this object, some APIs are automatically called to obtain the host version and status.\r\n     * It starts polling automatically soon after the initialization.\r\n     * Polling interval can be specified in constructor's option parameter.\r\n     * Host ( FlashAir network address ) can be provided in the constructor or you can change the host address any time later by calling [`setHostAddress`]{@link setHostAddress}.\r\n     * \r\n     * ## How to start\r\n     * Instantiating FlashAirClient object is the simplest start.\r\n     * ```\r\n     * var fa = new FlashAir.FlashAirClient();\r\n     * ```\r\n     * Available options are defined in {@link FlashAirClientConfig FlashAirClientConfig}.\r\n     * \r\n     * ##Events\r\n     * This class supports DOM like event system. Changes of host SD card status and some more can be monitored by handling those events.\r\n     * Event attach/detach methos are just same as jQuery's on/off/once\r\n     * ```\r\n     * var fa = new FlashAir.FlashAirClient();\r\n     * fa.on('fa.hostready', function(){\r\n     *     // custom initialization\r\n     * });\r\n     * ```\r\n     * \r\n     * \r\n     * ###```fa.updated```\r\n     * is triggered when /command.cgi?op=121 host timestamp returns updated number. You can take any action like getting a updated file list.\r\n     * \r\n     * ###```fa.hostchanged```\r\n     * is triggered when the host name or IP address is changing to another. During the initial connection, this event doesn't fire.\r\n     * \r\n     * ###```fa.hostready```\r\n     * After the initial connection or fireing ```fa.hostchanged```, this class tries to obtain some host status by some API calls.\r\n     * This event is triggered when those initial calls are all done.\r\n     * \r\n     * ###```fa.hostfailure```\r\n     * After calling [setHostAddress]{@link setHostAddress}, if connection failed, this event is triggered.\r\n     * \r\n     * ###```fa.polling```\r\n     * reports polling status every *n* milliseconds interval which is configured with options for constructor.\r\n     * The polling status has a status value:\r\n     * ```\r\n     * fa.on('fa.polling', function( status ){\r\n     *     // check the status\r\n     * });\r\n     * ```\r\n     * \r\n     * status value can be:\r\n     * - **connecting** Trying to connect to the host SD card.\r\n     * - **connected** Connection to the host SD card has been confirmed.\r\n     * - **disconnected**  Connection to the host SD card has been lost.\r\n     * \r\n     * ###```fa.photosharemode```\r\n     * is triggered when the host SD card is currently in PHOTOSHARE mode.\r\n     *  \r\n     * \r\n     */\r\n    export class FlashAirClient extends eventEmitter\r\n    {\r\n        /**\r\n         * URL for FlashAir host device like \"http://flashair/\".\r\n         * url always ends with /.\r\n         */\r\n        baseUrl : string;\r\n        /**\r\n         * This is set when the connecting client has a right mastercode.\r\n         */\r\n        isAdministrator : boolean;\r\n        mastercode : string;\r\n        /**\r\n         * firmware version string obtained by calling command.cgi?op=108. undefined if not known yet. \r\n         */\r\n        firmware: string;\r\n        /**\r\n         * version compatibility by number 1, 2, 3...\r\n         */\r\n        firmwareVersionNumber: number = 1;  \r\n        /**\r\n         * holds current language. This value comes from user's browser's language setting, otherwise is obtained by command.cgi accept language.\r\n         */\r\n        lang: string;\r\n        /**\r\n         * @param urlBase an address to FlashAir host, \"http://flashair/\". If omitted, proper host address is infered.\r\n         * @param options specify options. Available options are defined in {@link FlashAirClientConfig FlashAirClientConfig}\r\n         */\r\n        constructor(urlBase? : string, options? : FlashAirClientConfig )\r\n        {\r\n            super();\r\n            var me = this;\r\n            me.Command = new Command(this);\r\n            me.Thumbnail = new Thumbnail(this);\r\n            me.Config = new Config(this);\r\n            me.Upload = new Upload(this);\r\n            me.mastercode = sessionStorage.getItem(\"administrator\");\r\n            // options\r\n            me.pollingInterval = !options.polling ? me.pollingInterval :  options.polling === true ? me.pollingInterval : options.polling === false ? 0 : <number>options.polling ;\r\n            this.setHostAddress( urlBase || \"\", options.checkHost || true );\r\n        }\r\n        /**\r\n         * @param newUrl new host URL of FlashAir, which may be like \"http://flashair/\" or \"http://192.168.0.100/\"\r\n         * @param verify If true, this method tries to verify the existence of the host address by calling command.cgi\r\n         * @returns jQuery promise object. \r\n         */\r\n        setHostAddress(newUrl : string, verify : boolean = true ) : JQueryPromise<any>{\r\n            var me = this;\r\n            me.stopPolling();\r\n            if( verify ){\r\n                return $.ajax({\r\n                    url : newUrl + \"/command.cgi?op=108&TIME=\" + Date.now(), // get firmware version\r\n                    timeout: 3000 \r\n                })\r\n                .done(set)\r\n                .fail(function(){\r\n                    me.onHostFailure();\r\n                })\r\n                .always(function(){\r\n                });\r\n            } else {\r\n                set();\r\n                var d = $.Deferred();\r\n                d.resolve();\r\n                return d;\r\n            }\r\n            function set(firmware? : string){\r\n                if( ! /\\/$/.test( newUrl ) ) newUrl = newUrl + \"/\";\r\n                me.baseUrl = newUrl;\r\n                me.firmware = firmware;\r\n                if( firmware ){\r\n                    var m = /(\\d+)\\.(\\d+)\\.(\\d+)$/.exec(firmware);\r\n                    if( m ) me.firmwareVersionNumber = Number(m[1]);\r\n                }\r\n                me.onHostChanged();\r\n                me.initWithHost();\r\n            }\r\n        }\r\n        protected initWithHost()\r\n        {\r\n            var me = this;\r\n            var inits = [];\r\n            inits.push(this.browserLanguage());\r\n            if( me.firmwareVersionNumber >= 2){\r\n                inits.push(\r\n                    this.Command.IsPhotoShareEnabled()\r\n                        .done(function(result:boolean){\r\n                             me.photoShareMode = result;\r\n                             me.trigger(\"fa.photosharemode\"); \r\n                         }));\r\n                                    \r\n            } else me.photoShareMode = false; // ver 1 model does not support this\r\n\r\n            if (me.mastercode) {\r\n                inits.push( \r\n                    $.ajax({ type: 'GET', cache: false, url: '/config.cgi?MASTERCODE=' + me.mastercode })\r\n                    .done(function (result) {\r\n                        if (result == \"SUCCESS\") {\r\n                            // I am administrator\r\n                            $(\"#setBtn\").show();\r\n                            me.isAdministrator = true;\r\n                        }\r\n                    }));\r\n            }\r\n            $.when.apply($,inits)\r\n                .then(function () {\r\n                    me.onHostReady();\r\n                }, function(){\r\n                    me.onHostFailure();\r\n                });\r\n           \r\n        }\r\n        /**\r\n         * represents command.cgi.\r\n         * command.cgi のオブジェクト表現\r\n         */\r\n\t\tCommand : Command;\r\n        /**\r\n         * represents thumbnail.cgi\r\n         *  thumbnail.cgi のオブジェクト表現\r\n         */\r\n        Thumbnail : Thumbnail;\r\n        /**\r\n         * represents config.cgi\r\n         * config.cgi のオブジェクト表現\r\n         */\r\n        Config : Config;\r\n        /**\r\n         * represents upload.cgi\r\n         * upload.cgi のオブジェクト表現\r\n         */\r\n        Upload :  Upload;\r\n        /**\r\n         * Not implemented.\r\n         * @param path\r\n         * @returns \r\n         */\r\n        GetFile( path : string | FileInfo )\r\n        {\r\n            throw \"not implemented\";\r\n        }\r\n        GetFileUrl( path : string | FileInfo | FileInfoRaw ) : string\r\n        {\r\n            var p : string;\r\n            if( typeof path == \"string\" ) p = <string> path;\r\n            else p = ( (<FileInfoRaw> path).r_uri || (<FileInfo>path).Directory) + \"\\\\\" + ((<FileInfoRaw> path).fname || (<FileInfo> path).Name );\r\n            return this.baseUrl + p.replace(\"\\\\\", \"/\");\r\n        }\r\n        protected onHostChanged()\r\n        {\r\n            this.trigger(\"fa.hostchanged\");\r\n        }\r\n        protected onHostReady()\r\n        {\r\n            this.trigger(\"fa.hostready\");    \r\n            this.startPolling();\r\n        }\r\n        protected onHostFailure(){\r\n            this.trigger(\"fa.hostfailure\");\r\n        }\r\n        photoShareMode: boolean;\r\n        // Polling\r\n        //event pollingStatusChanged\r\n        private timer; \r\n        private timestamp;\r\n        /// milisecond\r\n        private pollingInterval = 2000;\r\n        private _pausePolling = false;\r\n        startPolling() : void {\r\n            if ( ! this.photoShareMode && this.pollingInterval > 0 && !this.timer )  this.poll();\r\n        }\r\n        pausePolling(){ this._pausePolling = true; }\r\n        resumePolling(){ this._pausePolling = false; }\r\n        stopPolling() : void {\r\n            if (this.timer) {\r\n                clearTimeout(this.timer); this.timer = null;\r\n            }\r\n        }\r\n        private poll() {\r\n            var me = this;\r\n            if( me._pausePolling ){\r\n                me.timer = setTimeout( $.proxy( me.poll, me), me.pollingInterval);\r\n                return;\r\n            }\r\n            var eventName = \"fa.polling\";\r\n            me.trigger(eventName, \"connecting\");\r\n            this.Command.LastUpdatedTimestamp( this.pollingInterval/3 )\r\n                .done(function (timestamp) {\r\n                    me.trigger(eventName, \"connected\");\r\n                    if (me.timestamp && timestamp > me.timestamp) {\r\n                        me.trigger(\"fa.updated\");\r\n                    }\r\n                    me.timestamp = timestamp;\r\n                }).fail(function () {\r\n                    me.trigger(eventName, \"disconnected\");\r\n                }).always(function () {\r\n                    if( me.pollingInterval > 0 ){\r\n                        me.timer = setTimeout( $.proxy( me.poll, me), me.pollingInterval);\r\n                    } else me.timer = null;\r\n                });\r\n        }\r\n        //\r\n        private browserLanguage(){\r\n            var me = this;\r\n            try {\r\n                var lang;\r\n                lang = (navigator.browserLanguage || navigator.language || navigator.userLanguage).substr(0, 2);\r\n    \r\n                if (lang == 'en' ) {\r\n                    return me.Command.AcceptLanguage() // language\r\n                        .done(function (result) {\r\n                            var lang;\r\n                            if (result.substr(17, 2) == 'zh') {\r\n                                lang = result.substr(17, 5);\r\n                                lang = lang.toLowerCase();\r\n    \r\n                                if ((lang == 'zh-cn') || (lang == 'zh-tw')) {\r\n                                    return lang;\r\n                                }\r\n                                else {\r\n                                    lang = result.substr(17, 10);\r\n                                    lang = lang.toLowerCase();\r\n    \r\n                                    if (lang == 'zh-hans-cn') {\r\n                                        lang = 'zh-cn';\r\n                                    }\r\n                                    else if (lang == 'zh-hant-tw') {\r\n                                        lang = 'zh-tw';\r\n                                    }\r\n                                    else {\r\n                                        lang = 'zh';\r\n                                    }\r\n    \r\n                                    return lang;\r\n                                }\r\n                            } else {\r\n                                lang = result.substr(17, 2);\r\n                            }\r\n                            me.lang = lang;\r\n                        });\r\n                } else if (lang == 'zh') {\r\n                    me.lang = (navigator.browserLanguage || navigator.language || navigator.userLanguage);\r\n                } else me.lang = lang;\r\n            }\r\n            catch (e) {\r\n                me.lang = 'en';\r\n            }\r\n            var d = $.Deferred();\r\n            d.resolve();\r\n            return d;\r\n        }\r\n       \r\n    }\r\n\r\n    /**\r\n     * base class of CGI.\r\n     * This class contains utility methods for CGI call, HTTP GET/POST etc.\r\n     */\r\n    export class CgiHost\r\n    {\r\n        protected Client : FlashAirClient;\r\n        CgiPath : string;\r\n        protected GetBaseUrl(){\r\n            return this.Client.baseUrl;\r\n        }\r\n        /**\r\n         * internal use only\r\n         */\r\n        constructor( fa : FlashAirClient )\r\n        {\r\n            this.Client = fa;\r\n        }\r\n        protected getTimestamp() : number {\r\n            return Date.now();\r\n        }\r\n        /**\r\n         * helper function to call host CGI with GET method\r\n         * @param qs query string with name:value\r\n         * @param ajaxOption \r\n         */\r\n        protected GetMethod( qs? : Object, ajaxOption? : Object ) : JQueryXHR\r\n        {\r\n            if( qs ) qs[\"TIME\"] = this.getTimestamp();\r\n            var a = {\r\n                type: \"GET\",\r\n                url: this.GetBaseUrl() + this.CgiPath,\r\n                data: qs\r\n            };\r\n            if( ajaxOption ) $.extend(a, ajaxOption);\r\n            return $.ajax(a);\r\n        }\r\n        private ajax( o ) : JQueryXHR\r\n        {\r\n            return $.ajax(o);\r\n        }\r\n    }\r\n    /**\r\n     * represents /command.cgi API.\r\n     * Every API method is asynchronous with JQueryPromise object. You can get the result in number, string and predefined enum or object\r\n     * by calling .done/fail/always... promise methods.\r\n     * \r\n     * ###example of listing files\r\n     * \r\n     * ```\r\n     * var fa = new FlashAir.FlashAirClient();\r\n     * fa.Command.FileList( \"/DCIM\" )\r\n     *   .done(function (list) {\r\n     *       // list is an array of FlashAir.FileInfoRaw   \r\n     *      \r\n     *   });\r\n     * ```\r\n     */\r\n    export class Command extends CgiHost\r\n    {\r\n        CgiPath = \"command.cgi\";\r\n        /**\r\n         * internal use only\r\n         */\r\n        constructor(fa : FlashAirClient )\r\n        {\r\n\t\t\tsuper( fa );\r\n        }\r\n        /**\r\n         * utility method of HTTP GET with explicit `op` number.\r\n         * returned content is parsed as TResult type.\r\n         * @param op `op` number for command.cgi call.\r\n         * @param qs other query strings. op and qs are mixed when it calls command.cgi\r\n         * @returns jQuery promise object.\r\n         */\r\n        protected Get<TResult>(op : number, qs? : Object, ajaxOptions? : Object) : JQueryPromise<any>\r\n        {\r\n            var data = $.extend( {}, qs || {}, {op:op} );\r\n            return this.GetMethod( data, ajaxOptions ).pipe(function(result){ return <TResult> result; } );\r\n        }\r\n\r\n        /**\r\n         * regular expression pattern to parse WLANSD_FILELIST which is returned from OP=100 CGI call.\r\n         */\r\n        private static reColumns = /^(.+),(\\d+),(\\d+),(\\d+),(\\d+)/;\r\n\r\n        /**\r\n         * List files in a directory.\r\n         * ```OP=100&DIR=/DCIM```\r\n         * command.cgi?OP=100 operation.\r\n         * @param dir directory path to list\r\n         * @returns jQuery promise for `FileInfoRaw` \r\n         */\r\n        FileList(dir : string) : JQueryPromise<FileInfoRaw[]> \r\n        {\r\n            return this.Get<string>(100, { \"DIR\" : dir })\r\n                .pipe( function(result){\r\n                    // parse HTML content for the \"LIST\"\r\n                    dir = dir == \"/\" ? \"\" : dir;\r\n                    var lines = result.split(/\\r?\\n/);\r\n                    if (lines[0] != \"WLANSD_FILELIST\") throw \"First line is not WLANSD_FILELIST.\";\r\n                    var list : FileInfoRaw[] = [];\r\n                    for (var i = 1; i < lines.length; i++) {\r\n                        var m = Command.reColumns.exec(lines[i]);\r\n                        if( m){\r\n                            list.push({ r_uri: dir, fname: m[1].substring(dir.length+1), fsize: Number(m[2]), attr: Number(m[3]), fdate: Number(m[4]), ftime: Number(m[5]) });\r\n                        }\r\n                    }\r\n                    return list;\r\n                });\r\n        }\r\n        /**\r\n         * ```op=101&DIR=/DCIM```\r\n         */\r\n        FileCount(dir : String) : JQueryPromise<number>\r\n        {\r\n            return this.Get<number>(101, { \"DIR\": dir } );\r\n        }\r\n        /**\r\n         * ```op=102```\r\n         */\r\n        IsUpdated() :JQueryPromise<boolean>  {  return this.Get<number>(102).pipe( function(v){ return v == 1}); }\r\n        /**\r\n         * ```op=104```\r\n         */\r\n        NetworkSSID() : JQueryPromise<string> { return this.Get<string>(104); }\r\n        /**\r\n         * ```op=105```\r\n         */\r\n        NetworkPassword() : JQueryPromise<string> { return this.Get<string>(105); }\r\n        /**\r\n         * ```op=106```\r\n         * MACアドレスの取得\r\n         */\r\n        MAC() : JQueryPromise<string> { return this.Get<String>(106); }\r\n        /**\r\n         * ```op=107```\r\n         * ブラウザ言語の取得\r\n         */\r\n        AcceptLanguage() : JQueryPromise<string> { return this.Get<String>(107); }\r\n        /**\r\n         * ```op=108```\r\n         * ファームウェアバージョン情報の取得\r\n         */\r\n        FirmwareVersion() : JQueryPromise<string> { return this.Get<String>(108); }\r\n        /**\r\n         * ```op=109```\r\n         * 制御イメージの取得\r\n         */\r\n        ControlImagePath() : JQueryPromise<string> { return this.Get<string>(109); }\r\n        /**\r\n         * ```op=110```\r\n         * 無線LANモードの取得\r\n         */\r\n        OperationMode() : JQueryPromise<WiFiOperationMode> { return this.Get<WiFiOperationMode>(110); }\r\n        /**\r\n         * ```op=111```\r\n         * 無線LANタイムアウト時間の設定\r\n         */\r\n        DeviceTimeout() : JQueryPromise<number> { return this.Get<number>(111); }\r\n        /**\r\n         * ```op=117```\r\n         * アプリケーション独自情報の取得\r\n         */\r\n        AppCustomInfo() : JQueryPromise<string> { return this.Get<string>(117); }\r\n        /**\r\n         * ```op=118```\r\n         * アップロード機能の有効状態の取得\r\n         */\r\n        UploadEnabled() : JQueryPromise<boolean> { return this.Get<string>(118).pipe(function(v){ v == \"1\" }); }\r\n        /**\r\n         * ```op=120```\r\n         * CIDの取得\r\n         */\r\n        CID() : JQueryPromise<string> { return this.Get<string>(120); }\r\n        /**\r\n         * ```op=121```\r\n         * アップデート情報の取得 (タイムスタンプ形式)\r\n         * @param timeout timeout of CGI call in millisecond. In purpose of avoiding long lasting connection to CGI server to reduce unnecessary load.\r\n         */\r\n        LastUpdatedTimestamp( timeout?:number ) : JQueryPromise<number> { return this.Get<number>(121, null, {timeout:timeout}); }\r\n\r\n        /*\r\n        byte[] ReadExtensionRegisterSingleBlockCommand(int addr, int len)\r\n        {\r\n            throw new NotImplementedException();\r\n        }\r\n        bool WriteExtensionRegisterSingleBlockCommand(int addr, int len, byte[] data)\r\n        {\r\n            throw new NotImplementedException();\r\n        }\r\n        */\r\n        \r\n        GetAvailableSectorInfo() : JQueryPromise<FreeSectorInfo>\r\n        {\r\n            return this.Get<string>(140).pipe(function(result){\r\n                var line = result.split(/[\\/\\,]/);\r\n                return { Free: parseInt(line[0]), Total: parseInt(line[1]), SectorSize: parseInt(line[2]) };\r\n            });\r\n        }\r\n\r\n        TurnOnPhotoShare(dir : string, date : Date ) : JQueryPromise<boolean>\r\n        {\r\n            var qs = {\r\n                \"DIR\": dir,\r\n                \"DATE\": FileInfo.DateTimeToFDATE(date)\r\n            };\r\n            return this.Get<String>(200, qs).pipe(function(result){ return result == \"OK\";});\r\n        }\r\n        TurnOffPhotoShare() : JQueryPromise<boolean>\r\n        {\r\n            return this.Get<String>(201).pipe(function(result){ return result== \"OK\"; }); \r\n        }\r\n        IsPhotoShareEnabled() : JQueryPromise<boolean>\r\n        {\r\n            return this.Get<String>(202).pipe(function(result){ return result == \"SHAREMODE\";}); \r\n        }\r\n        PhotoShareSSID() : JQueryPromise<string>\r\n        {\r\n            return this.Get<string>(203);\r\n        }\r\n        WebDAVStatus() : JQueryPromise<WebDAVStatus>\r\n        {\r\n            return this.Get<number>(220).pipe(function(result){return result; });\r\n        }\r\n        /// minutes\r\n        TimeZone() : JQueryPromise<number>\r\n        {\r\n            return this.Get<number>(221).pipe(function(result){ return result * 15; });\r\n        }\r\n    }\r\n\texport class Thumbnail extends CgiHost\r\n    {\r\n        CgiPath = \"thumbnail.cgi\";\r\n        constructor(fa : FlashAirClient )\r\n        {\r\n\t\t\tsuper( fa );\r\n        }\r\n        /**\r\n         * get a URL address for the thumbnail image.\r\n         * @param file FlashAir.FileInfoRaw object which is returned from op=100 call.\r\n         */\r\n        GetUrl(file : FileInfoRaw | string) : string\r\n        {\r\n            if( typeof file == \"string \") return this.GetBaseUrl()  + this.CgiPath + \"?\" + <string> file;\r\n            return this.GetBaseUrl() + this.CgiPath + \"?\" + (<FileInfoRaw>file).r_uri + \"/\" + (<FileInfoRaw>file).fname;\r\n        }\r\n        /*\r\n        Get( file : FileInfo | string, exif? : ExifInfo ) \r\n        {\r\n            return typeof(file) == \"string\" ? this.Get<Stream>( this.BaseUrl + \"?\" + path) : this.Get(file.Directory + \"/\" + file.Name);\r\n        }*/\r\n        /*\r\n            var xWidth = response.Headers.GetValues(\"X-exif-WIDTH\").FirstOrDefault();\r\n            var xHeight = response.Headers.GetValues(\"X-exif-HEIGHT\").FirstOrDefault();\r\n            var xOrientation = response.Headers.GetValues(\"X-exif-ORIENTATION\").FirstOrDefault();\r\n            if( !String.IsNullOrEmpty(xWidth) &&!String.IsNullOrEmpty(xHeight) &&!String.IsNullOrEmpty(xOrientation) )\r\n            {\r\n                exif = new ExifInfo { Height = int.Parse(xHeight), Width = int.Parse(xWidth), Orientation = (ExifOientation)int.Parse(xOrientation) };\r\n            }\r\n            else\r\n            {\r\n                exif = null;\r\n            }\r\n            return response.Content.ReadAsStreamAsync().Result;\r\n        }*/\r\n    }\r\n    export interface ConfigDefinition {\r\n        APPINFO? : string;\r\n        APPMODE? : WiFiOperationMode;\r\n        APPNETWORKKEY? : string;\r\n        APPSSID? :string;\r\n        BRGNETWORKKEY? : string;\r\n        BRGSSID? : string;\r\n        CIPATH? : string;\r\n        CLEARCODE? : number;\r\n        TIMEZONE? : number;\r\n        WEBDAV? : WebDAVStatus;\r\n        APPAUTOTIME? : number;\r\n        \r\n    }\r\n    export class Config extends CgiHost\r\n    {\r\n        CgiPath = \"config.cgi\";\r\n        CONFIG : ConfigDefinition = {};\r\n        constructor(fa : FlashAirClient )\r\n        {\r\n\t\t\tsuper( fa );\r\n        }\r\n        Get<TResult>( qs ) : JQueryPromise<TResult>\r\n        {\r\n            return this.GetMethod( qs );\r\n        }\r\n        /// <summary>\r\n        /// Configオブジェクトに対して設定した情報を FlashAir にまとめて送信します。\r\n        /// </summary>\r\n        /// <param name=\"masterCode\"></param>\r\n        /// <returns></returns>\r\n        Submit( masterCode : string) : JQueryPromise<boolean>\r\n        {\r\n            this.CONFIG[\"MASTERCODE\"] = masterCode;\r\n            return this.Get<string>(this.CONFIG).pipe(function(result){ return result == \"SUCCESS\"; });\r\n        }\r\n        /// <summary>\r\n        /// ローカルで設定したCONFIG情報をすべてクリアします。\r\n        /// </summary>\r\n        Clear() : void\r\n        {\r\n            this.CONFIG = {};\r\n        }\r\n        /// <summary>\r\n        /// 無線LAN機能の自動タイムアウト時間を設定します。単位はミリ秒です。 設定可能な値は、60000から4294967294で、デフォルト値は300000(5分)です。\r\n        /// 0を指定すると自動停止しない設定になります。ただし、ホスト機器のスリープでカードへの電源供給が遮断された場合などに、停止することがあります。\r\n        /// </summary>\r\n        /*\r\n        getDeviceTimeout() : TimeSpan {\r\n            return new TimeSpan( GetCONFIG<number>(\"APPAUTOTIME\") );\r\n        }*/\r\n        setDeviceTimeout(value) {\r\n            var ms = value;\r\n            if (ms < 60000 || ms > 4294967294) throw \"value must be between 60000 and 4294967294.\";\r\n            this.CONFIG.APPAUTOTIME = ms;\r\n        }\r\n        /*\r\n        // CONFIG entries\r\n        GetCONFIG<TResult>( key : string ) : TResult { return <TResult>this.CONFIG[key]; }\r\n        get AppCustomInfo() { return this.CONFIG[\"APPINFO\"]; } set AppCustomInfo(value){ this.CONFIG[\"APPINFO\"] = value; }\r\n        get OperationMode() : WiFiOperationMode { return this.CONFIG[\"APPMODE\"]; } set OperationMode(value){ this.CONFIG[\"APPMODE\"] = Number(value); }\r\n        get NetworkPassword() :string { return this.CONFIG[\"APPNETWORKKEY\"]; } set NetworkPassword(value) { this.CONFIG[\"APPNETWORKKEY\"] = value; }\r\n        get NetworkSSID() : string { return this.CONFIG[\"APPSSID\"]; } set NetworkSSID(value){ this.CONFIG[\"APPSSID\"] = value; }\r\n        get BridgeNetworkPassword() : string { return this.CONFIG[\"BRGNETWORKKEY\"]; } set BridgeNetworkPassword(value){ this.CONFIG[\"BRGNETWORKKEY\"] = value; }\r\n        get BridgeNetworkSSID() : string  { return this.CONFIG[\"BRGSSID\"]; } set BridgeNetworkSSID(value) { this.CONFIG[\"BRGSSID\"] = value; }\r\n        get ControlImagePath() : string { return this.CONFIG[\"CIPATH\"]; } set ControlImagePath(value){ this.CONFIG[\"CIPATH\"] = value; }\r\n        get ClearMasterCode() : boolean { return this.CONFIG[\"CLEARCODE\"] == \"1\"; } set ClearMasterCode(value) { this.CONFIG[\"CLEARCODE\"] = value ? \"1\" : \"\"; }\r\n        get TimeZone() : TimeSpan { return TimeSpan.FromMinutes( this.GetCONFIG<number>(\"TIMEZONE\") * 15); } set TimeZone(value) { this.CONFIG[\"TIMEZONE\"] = Math.floor(( value.TotalMinutes / 15 )); }\r\n        get WebDAVStatus() : WebDAVStatus { return this.GetCONFIG<number>(\"WEBDAV\"); } set WebDAVStatus(value){ this.CONFIG[\"WEBDAV\"] = value; }\r\n        */\r\n        //public String MasterCode { get { return CONFIG[\"APPINFO\"]; } set { CONFIG[\"APPINFO\"] = value; } }\r\n\r\n    }\r\n\t\r\n    export class Upload extends CgiHost\r\n    {\r\n        constructor(fa : FlashAirClient )\r\n        {\r\n\t\t\tsuper( fa );\r\n        }\r\n/*\r\n        UploadFile( fileStream : Stream, filename : string )\r\n        {\r\n            throw \"not implemented.\"\r\n        }\r\n        DeleteFile( path : string )\r\n        {\r\n            return this.Get<string>( { \"DEL\" : path } ) == \"SUCCESS\";\r\n        }\r\n        SetUploadDirectory( dir : string )\r\n        {\r\n            return this.Get<string>( { \"UPDIR\" : dir } ) == \"SUCCESS\";\r\n        }\r\n        SetSystemTime( time : Date )\r\n        {\r\n            return this.Get<string>( { \"FTIME\" : \"0x\" + ((FileInfo.DateTimeToFDATE(time) << 16) + FileInfo.DateTimeToFTIME(time)).ToString(\"X\") } ) == \"SUCCESS\";\r\n        }\r\n        SetWriteProtect()\r\n        {\r\n            return this.Get<string>( { \"WRITEPROTECT\" : \"ON\" } ) == \"SUCCESS\";\r\n        }\r\n    */\r\n    }\r\n}\r\n \r\n\r\n"],"sourceRoot":"/source/"}